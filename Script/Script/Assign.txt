CREATE TABLE Assign (
Id Int NOT NULL,
NitProjectManager varchar(255) NOT NULL,
NitEmployee varchar(255) NOT NULL,
NitProject varchar(255) NOT NULL,
PRIMARY KEY (Id),
CONSTRAINT Unique_Assign UNIQUE(NitProjectManager, NitEmployee, NitProject),
FOREIGN KEY (NitProjectManager) REFERENCES dbo.ProjectManager(Nit),
FOREIGN KEY (NitEmployee) REFERENCES dbo.Employee(Nit),
FOREIGN KEY (NitProject) REFERENCES dbo.Project(Id)
);

CREATE PROCEDURE JobTime_Get_Assign
AS
BEGIN
  SELECT * FROM dbo.Assign; 
END

Exec dbo.JobTime_Get_Assign


CREATE PROCEDURE JobTime_Post_Assign
@Id INT,
@NitProjectManager varchar(255),
@NitEmployee varchar(255),
@NitProject varchar(255)
AS
BEGIN	
	IF EXISTS(SELECT 1 FROM dbo.Assign WHERE Id = @Id)
	BEGIN
	    UPDATE dbo.Assign
		SET NitProjectManager = @NitProjectManager,
			NitEmployee = @NitEmployee,
			NitProject = @NitProject
		WHERE Id = @Id;
	END
	ELSE
	BEGIN
	    SELECT @Id = ISNULL(MAX(Id), 0) + 1 FROM dbo.Assign;
		INSERT dbo.Assign
		( Id, NitProjectManager, NitEmployee,NitProject )
		VALUES
		( @Id, @NitProjectManager, @NitEmployee, @NitProject)
	END
END

CREATE PROCEDURE JobTime_Delete_Assign
@Id varchar(255)
AS
BEGIN
	SET DATEFORMAT DMY;
	SET LANGUAGE SPANISH;
	DECLARE @MsgError NVARCHAR(MAX) = '';	
	BEGIN TRY
	    IF NOT EXISTS(SELECT 1 FROM dbo.Assign WHERE Id = @Id)
		BEGIN
			SET @MsgError = 'The Assign with Id: ' + CONVERT(VARCHAR(10), @Id) + ' does not exist.';
			RAISERROR(@MsgError, 16, 217);
		END
		ELSE
		BEGIN
			DELETE dbo.Assign WHERE Id = @Id	    
		END
	END TRY
	BEGIN CATCH
	    SET @MsgError = ERROR_MESSAGE();
		RAISERROR(@MsgError, 16, 217);
	END CATCH
END